import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import { HiOutlineLogout } from "react-icons/hi";
import { FaUserCircle } from "react-icons/fa";
import Logo from "~/components/Logo";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>ConnectMe</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/global-network.png" />
      </Head>
      
      <div className="h-screen grid grid-cols-2 gap-0 bg-gray-200">
        
        <div className="col-span-1 flex justify-center items-center h-full">
          <Logo />
          <div className="absolute inset-y-0 left-1/2 w-3 bg-black"></div>
        </div>
        <div className="col-span-1 flex flex-col items-center justify-center gap-4">
          <p className="text-center text-2xl text-gray-600 font-semibold">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </p>
          
          <AuthShowcase />
        
        </div>
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
    const { data: sessionData } = useSession();
  
    const { data: secretMessage } = api.example.getSecretMessage.useQuery(
      undefined, // no input
      { enabled: sessionData?.user !== undefined }
    );
  
    return (
      <div className="flex flex-col items-center justify-center gap-4 ">
        <p className="text-center text-2xl text-gray-600 font-semibold">
          {sessionData && (
            <span>
              Logged in as {sessionData.user?.name}
            </span>
          )}
        </p>
        <button
          className="rounded-full bg-white px-10 py-3 font-semibold text-gray-600 no-underline transition hover:bg-black"
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? (
            <div className="flex items-center justify-center gap-2">
              <HiOutlineLogout />
              <span>Sign out</span>
            </div>
          ) : (
            <div className="flex items-center justify-center gap-2">
              <FaUserCircle />
              <span>Sign in</span>
            </div>
          )}
        </button>
        {sessionData && (
          <Link href="/server">
            <button className="rounded-full bg-gray-500 px-10 py-3 font-semibold text-white mt-4 hover:bg-black transition">
              Connect Me
            </button>
          </Link>
        )}
      </div>
    );
  };
  
